@page "/categories"
@using System.Linq
@using PROJECT_ES.Service

@inject HttpClient httpClient
@inject CategoryRepository categoryRepository
@inject NavigationManager NavigationManager

    <h1>Categories</h1>
    <form @onsubmit="AddCategoryAsync">
        <div class="col-md-4">
            <label for="exampleInputEmail1" class="form-label">Insira o nome da Categoria</label>
            <input style="border-radius: 20px;" type="text" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" @bind="categoryName" placeholder="Add Category">
        </div><br>
        <button type="submit" class="btn btn-primary">Add</button>
    </form>


 <!-- =================== START OF RECENT ORDER =================== -->
                <div class="recent-orders">
                    
                    @if (categories == null)
                        {
                            <p><em>Loading...</em></p>
                        }
                        else if (!categories.Any())
                        {
                            <p><em>No categories found.</em></p>
                        }
                        else
                        {
                  <table>
                    <thead>
                      <tr>
                        <th>Nome</th>
                        <th>Apagar</th>
                      </tr>
                    </thead>
                    <tbody>
                    @foreach (var category in categories)
                    {
                                    <tr>
                                        <td>@category.Name</td>
                                                            <td>
                                                                <a @onclick="() => DeleteMovie(category.Id)"> <i class="fa fa-trash"></i></a>
                                                            </td>
                                    </tr>
                                }
                                </tbody>
                  </table>
                        }
                </div>
                <!-- =================== END OF RECENT ORDER =================== -->

@code
{
    private string categoryName;
    private IEnumerable<Data.Category> categories;
    
    protected override async Task OnInitializedAsync()
    {
        categories = await categoryRepository.GetAllCategoriesAsync();
    }

    private async Task AddCategoryAsync()
    {
        await categoryRepository.AddCategoryAsync(categoryName);
        NavigationManager.NavigateTo(NavigationManager.Uri, true);
    }
    
    private async Task DeleteMovie(int id)
    {
        await categoryRepository.DeleteMovieAsync(id);
        NavigationManager.NavigateTo(NavigationManager.Uri, true);
    }
    
    private async Task UpdateCategory(int id, string newName)
    {
        await categoryRepository.UpdateCategoryAsync(id, newName);
        NavigationManager.NavigateTo(NavigationManager.Uri, true);
    }
}
