@page "/createcompetition"
@using PROJECT_ES.Data
@using PROJECT_ES.Service
@using Competition = PROJECT_ES.Data.Competition;
@inject CompetitionRepository competitionRepository
@inject MovieRepository movieRepository
@inject CategoryRepository categoryRepository
@inject NavigationManager NavigationManager
@using Microsoft.JSInterop
@using System.ComponentModel
@inject IJSRuntime JSRuntime

<div class="recent-orders">
    <h1>Criar competição</h1>
    <EditForm Model="@competition" OnValidSubmit="CreateCompetitionn">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="row">

            <label for="name">Name:</label>
            <input type="text" class="form-control" @bind="competition.Name" />
        </div>

        <div class="row">
            <label for="description">Description:</label>
            <input type="text" id="description" class="form-control" @bind="competition.Description" />
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="begin">Begin:</label>
                    <input type="datetime" id="begin" class="form-control" @bind="competition.data_inicio" />

                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label for="end">End:</label>
                    <input type="datetime" id="end" class="form-control" @bind="competition.data_fim" />
                </div>

            </div>
        </div>

        <div class="row">

            <div class="col-md-6">
                <div class="form-group select-box-wrapper">
                    <label>Movies</label>
                    <br />
                    <select class="form-control select-box" size="9" multiple @bind="selectedMovieIds">
                        @if (movies != null)
                        {
                            @foreach (var movie in movies)
                            {
                                <option value="@movie.Id">@movie.Title</option>
                            }
                        }
                    </select>
                    <br />
                    <label>Selecionados:</label>
                    <br />
                    <div class="selected-items">
                        @foreach (var movieId in selectedMovieIds)
                        {
                            var movie = movies.FirstOrDefault(m => m.Id == movieId);
                            if (movie != null)
                            {
                                <span class="selected-item">@movie.Title</span>
                            }
                        }
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group select-box-wrapper">
                    <label>Categories</label>
                    <br>
                    <select class="form-control select-box" size="9" multiple @bind="selectedCategoriesIds">
                        @if (categories != null)

                        {
                            @foreach (var category in categories)
                            {
                                <option value="@category.Id">@category.Name</option>
                            }
                        }

                    </select>
                    <br />
                    <label>Selecionados:</label>
                    <br />
                    <div class="selected-items">
                        @foreach (var categoryId in selectedCategoriesIds)

                        {
                            var category = categories.FirstOrDefault(c => c.Id == categoryId);
                            if (category != null)
                            {
                                <span class="selected-item">@category.Name</span>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary">Criar</button>
        </div>
    </EditForm>
</div>

<style>
    .select-box-wrapper {
        position: relative;
    }

    .select-box {
        height: 200px;
    }

        .select-box option {
            background: #fff;
            color: #000;
        }

    .selected-items {
        margin-top: 10px;
    }

    .selected-item {
        display: inline-block;
        padding: 5px 10px;
        background: #f0f0f0;
        color: #333;
        border-radius: 3px;
        margin-right: 5px;
        margin-bottom: 5px;
        font-size: 12px;
    }

    .row {
        display: flex;
        align-items: flex-start;
    }

    .col-md-6 {
        flex: 0 0 50%;
        max-width: 50%;
        padding-right: 15px;
        padding-left: 15px;
    }
</style>

@code {
    private int[] selectedMovieIds = new int[0];
    private int[] selectedCategoriesIds = new int[0];
    private Competition competition = new();
    private List<Movie> movies;
    private List<Data.Category> categories;

    protected override async Task OnInitializedAsync()
    {
        movies = (await movieRepository.GetMoviesAsync()).ToList();
        categories = (await categoryRepository.GetAllCategoriesAsync()).ToList();
    }

    private async Task CreateCompetitionn()
    {
        await competitionRepository.AddCompetitionWithMoviesAsync(competition, selectedMovieIds.ToList(), selectedCategoriesIds.ToList());
        NavigationManager.NavigateTo("/competitions");
    }
}