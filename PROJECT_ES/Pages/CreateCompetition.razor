@page "/createcompetition"
@using PROJECT_ES.Data
@using PROJECT_ES.Service
@using Competition = PROJECT_ES.Data.Competition;
@inject CompetitionRepository competitionRepository
@inject MovieRepository movieRepository
@inject CategoryRepository categoryRepository
@inject NavigationManager NavigationManager
@using Microsoft.JSInterop
@using System.ComponentModel
@inject IJSRuntime JSRuntime

<div class="recent-orders">
    <h1>Criar competição</h1>
    <EditForm Model="@competition" OnValidSubmit="CreateCompetitionn">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <label for="name">Name:</label>
                    <input type="text" class="form-control" @bind="competition.Name" />
                </div>
                <br/>
                <div class="form-group">
                    <label for="description">Description:</label>
                    <input type="text" id="description" class="form-control" @bind="competition.Description" />
                </div>
                <br/>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="name">Begin:</label>
                    <input type="datetime" id="data_inicio" class="form-control" @bind="competition.data_inicio" />
                </div>
                <br/>
                <div class="form-group">
                    <label for="name">End:</label>
                    <input type="datetime" id="data_inicio" class="form-control" @bind="competition.data_fim" />
                </div>
                <br/>
            </div>
        </div>
        
        <div class="row">
            <div class="col-md-4 select-box-wrapper">
                <label>Movies</label>
                <select class="form-select form-select-sm bordered-select" aria-label=".form-select-sm example" size="9" multiple @bind="selectedMovieIds">
                    @if (movies != null)
                    {
                        @foreach (var movie in movies)
                        {
                            <option value="@movie.Id">@movie.Title</option>
                        }
                    }
                </select>
            </div>
            <br/>
            <div class="col-md-4 select-box-wrapper">
                <label>Categories</label>
                <select class="form-select form-select-sm bordered-select" aria-label=".form-select-sm example" size="9" multiple @bind="selectedCategoriesIds">
                    @if (categories != null)
                    {
                        @foreach (var category in categories)
                        {
                            <option value="@category.Id">@category.Name</option>
                        }
                    }
                </select>
            </div>
        </div>
        
        <div class="row">
            <div class="col-md-6">
                <label>Selecionados</label>
                <select class="form-select form-select-sm" aria-label=".form-select-sm example" size="3">
                    @foreach (var movieId in selectedMovieIds)
                    {
                        var movie = movies.FirstOrDefault(m => m.Id == movieId);
                        if (movie != null)
                        {
                            <option value="@movie.Id">@movie.Title</option>
                        }
                    }
                </select>
            </div>
            <div class="col-md-6">
                <label>Selecionadas</label>
                <select class="form-select form-select-sm" aria-label=".form-select-sm example" size="3">
                    @foreach (var categoryId in selectedCategoriesIds)
                    {
                        var category = categories.FirstOrDefault(c => c.Id == categoryId);
                        if (category != null)
                        {
                            <option value="@category.Id">@category.Name</option>
                        }
                    }
                </select>
            </div>
        </div>

        <br/>

        <button type="submit" class="btn btn-primary">Criar</button>
    </EditForm>
</div>
<style>
    .select-box-wrapper {
      display: flex;
      flex-direction: column;
    }

    .bordered-select {
      border: 2px solid black;
      transition: border-color 0.3s ease;
    }

    .bordered-select:hover {
      border-color: lightgreen;
    }
</style>



@code {
    
    private int[] selectedMovieIds = new int[0];
    
    private int[] selectedCategoriesIds = new int[0];
    

    private Competition competition = new();

    private List<Movie> movies;
    private List<Data.Category> categories;
    
    private IEnumerable<Data.Competition> Details;    
    private IEnumerable<Data.Movie> Movies;
    private IEnumerable<Data.Category> Categories;
    
    protected override async Task OnInitializedAsync()
    {
        movies = (await movieRepository.GetMoviesAsync()).ToList();
        categories = (await categoryRepository.GetAllCategoriesAsync()).ToList();
    }

    
    private async Task CreateCompetitionn()
    {
        await competitionRepository.AddCompetitionWithMoviesAsync(competition, selectedMovieIds.ToList(),selectedCategoriesIds.ToList());
        NavigationManager.NavigateTo("/competitions");
    }

}