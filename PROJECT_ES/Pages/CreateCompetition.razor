@page "/createcompetition"
@using PROJECT_ES.Data
@using PROJECT_ES.Service
@using Competition = PROJECT_ES.Data.Competition;
@inject CompetitionRepository competitionRepository
@inject MovieRepository movieRepository
@inject CategoryRepository categoryRepository
@inject NavigationManager NavigationManager
@using Microsoft.JSInterop
@using System.ComponentModel
@inject IJSRuntime JSRuntime

<h1>Create Competition</h1>

<EditForm Model="@competition" OnValidSubmit="CreateCompetitionn">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="name">Name:</label>
        <input type="text" class="form-control" @bind="competition.Name" />
    </div>

    <div class="form-group">
        <label for="description">Description:</label>
        <input type="text" id="description" class="form-control" @bind="competition.Description" />
    </div>
    
    <div class="form-group">
        <label for="name">Begin:</label>
        <input type="datetime" id="data_inicio" class="form-control" @bind="competition.data_inicio" />
    </div>
    <div class="form-group">
        <label for="name">End:</label>
        <input type="datetime" id="data_inicio" class="form-control" @bind="competition.data_fim" />
    </div>
    <br>
   
     <select class="form-select form-select-sm" aria-label=".form-select-sm example" multiple @bind="selectedMovieIds">
          @if ( movies!= null)
          {
            @foreach (var movie in movies)
            {
                <option value="@movie.Id">@movie.Title</option>
            }
          }
        </select>
    <select class="form-select form-select-sm" aria-label=".form-select-sm example" multiple @bind="selectedCategoriesIds">
      @if (categories != null)
      {
        @foreach (var category in categories)
        {
            <option value="@category.Id">@category.Name</option>
        }
      }
    </select>
<br>

    <button type="submit" class="btn btn-primary">Create Competition</button>
</EditForm>

@code {
    
    private int[] selectedMovieIds = new int[0];
    
    private int[] selectedCategoriesIds = new int[0];
    

    private Competition competition = new();

    private List<Movie> movies;
    private List<Data.Category> categories;
    
    
    protected override async Task OnInitializedAsync()
    {
        movies = (await movieRepository.GetMoviesAsync()).ToList();
        categories = (await categoryRepository.GetAllCategoriesAsync()).ToList();
        
    }

    
    private async Task CreateCompetitionn()
    {
        await competitionRepository.AddCompetitionWithMoviesAsync(competition, selectedMovieIds.ToList(),selectedCategoriesIds.ToList());
        NavigationManager.NavigateTo("/competitions");
    }
    
    
}