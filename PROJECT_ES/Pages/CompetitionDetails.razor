@page "/competitiondetails/{id:int}"

@using PROJECT_ES.Data
@using PROJECT_ES.Service
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@inject HttpClient httpClient
@inject NavigationManager NavigationManager
@inject CompetitionDetailsRepository CompetitionDetailsRepository

                           

        <!-- =================== START OF RECENT ORDER =================== -->
<div class="recent-orders">
                                <div class="recent-orders">
                                    @if (Details != null && Details.Any())
                                        {
                                            <h1>@Details.First().Description</h1>
                                            <p>@Details.First().Name</p>  
                                                                    <br/>
                                        }
                                    </div>
                                
                        
    @if (Movies != null)
    {
        <table class="table">
            <thead>
            <tr>
                <th>Come√ßa</th>
                <th>Encerra</th>
                <th>Filmes Nomeados</th>
                <th>Categorias</th>
            </tr>
            </thead>
            <br>
            <tbody>
            @foreach (var detail in Details)
            {
                <tr>
                    <td>@detail.data_inicio.ToString()</td>
                    <td>@detail.data_fim.ToString()</td>
                    <td>
                        @foreach (var movie in Movies)
                        {
                            <p>@movie.Title</p>
                        }
                        <br>
                    </td>
                    <td>
                        @foreach (var category in Categories)
                        {
                            <p>@category.Name</p>
                        }
                        
                    </td>
                    
                </tr>
                
            }
            <br>
            </tbody>
        
                    <thead>
                    <tr>
                        <th>Categorias</th>
                        <th>Filmes</th>
                        <th>Votos</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var group in Votes.GroupBy(v => v.CategoryName))
                    {
                       
                        var category = group.Key;
                        var movies = group.Select(v => v.MovieTitle).ToList();
                        var voteCounts = group.Select(v => v.VoteCount).ToList();
                        var numMovies = movies.Count;
                      
                        <tr>
                            <td style="vertical-align: middle" rowspan="@numMovies">@category</td>
                            <td>@movies[0]</td>
                            <td>@voteCounts[0]</td>
                        </tr>
                        @for (var i = 1; i < numMovies; i++)
                        {
                            <tr>
                                <td>@movies[i]</td>
                                <td>@voteCounts[i]</td>
                            </tr>
                        }
                    }
                    </tbody>
                </table>
        }
</div>



               

@code {
    [Parameter]
    public int id { get; set; }
    
    private bool showEditModal = false;
    
    private IEnumerable<Data.Movie> Movies;
    private IEnumerable<Data.Category> Categories;
    
    private IEnumerable<PROJECT_ES.Data.Competition> Details;
    private IEnumerable<Vote> Votes;
    
    protected override async Task OnInitializedAsync()
    {
        Movies = await CompetitionDetailsRepository.GetAllMoviesAsync(id);
        Categories = await CompetitionDetailsRepository.GetAllCategoriesAsync(id);
        Details = await CompetitionDetailsRepository.GetAllDetailsAsync(id);
        Votes = await CompetitionDetailsRepository.GetEstatistic(id);
    }
    
}

