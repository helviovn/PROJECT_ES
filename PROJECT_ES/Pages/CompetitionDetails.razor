@page "/competitiondetails/{id:int}"

@using PROJECT_ES.Data
@using PROJECT_ES.Service
@inject HttpClient httpClient
@inject NavigationManager NavigationManager
@inject CompetitionDetailsRepository CompetitionDetailsRepository
<!doctype html>
<html class="no-js" lang="en">
<head>
</head>
<body>
<h1>Competition Details</h1>

<div class="container">
    @if (Movies != null)
    {
        <table class="table">
            <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Movies</th>
                <th>Categories</th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var detail in Details)
            {
                <tr>        
                    <td>@detail.Name</td>
                    <td>@detail.Description</td>
                    <td>@detail.data_inicio.ToString()</td>
                    <td>@detail.data_fim.ToString()</td>
                    <td>@string.Join(", ", Movies.Select(m => m.Title))</td>
                    <td>@string.Join(", ", Categories.Select(c => c.Name))</td>
                </tr>
            }

            </tbody>
        </table>
    
        <table class="table">
            <thead>
            <tr>
                <th>Categories</th>
                <th>Movies</th>
                <th>Votes</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var group in Votes.GroupBy(v => v.CategoryName))
            {
               
                var category = group.Key;
                var movies = group.Select(v => v.MovieTitle).ToList();
                var voteCounts = group.Select(v => v.VoteCount).ToList();
                var numMovies = movies.Count;
              
                <tr>
                    <td style="vertical-align: middle" rowspan="@numMovies">@category</td>
                    <td>@movies[0]</td>
                    <td>@voteCounts[0]</td>
                </tr>
                @for (var i = 1; i < numMovies; i++)
                {
                    <tr>
                        <td>@movies[i]</td>
                        <td>@voteCounts[i]</td>
                    </tr>
                }
            }
            </tbody>
        </table>
    }
</div>

</body>
</html>

@code {
    [Parameter]
    public int id { get; set; }
    
    private bool showEditModal = false;
    
    private IEnumerable<Data.Movie> Movies;
    private IEnumerable<Data.Category> Categories;
    
    private IEnumerable<PROJECT_ES.Data.Competition> Details;
    private IEnumerable<Vote> Votes;
    
    protected override async Task OnInitializedAsync()
    {
        Movies = await CompetitionDetailsRepository.GetAllMoviesAsync(id);
        Categories = await CompetitionDetailsRepository.GetAllCategoriesAsync(id);
        Details = await CompetitionDetailsRepository.GetAllDetailsAsync(id);
        Votes = await CompetitionDetailsRepository.GetEstatistic(id);
    }
    
}

